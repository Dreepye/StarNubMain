Change Log:

    Networking:
        - Removed unneeded starnubdata.network callbacks, this should removed 1 Object of memory per packet. (That's a big deal)
        - Modified the decoder by adding the Variant Length Quantity equation in the method, vice making it a object (Means its not stored in the memory heap)
        - Changed all socket settings, increasing the buffer allocation and write amount, per right

//dependacy versions

//planet who
//EPOLL
//Payer session permination time update

///////// THIS IS FOR ESSENTIALS PLUGIN ////////////////
        jsonObject.put("gamePort", ((Map)StarNub.getConfiguration().getConfiguration().get("starnubserver settings")).get("starbound_port"));
        jsonObject.put("serverName", ((Map)StarNub.getConfiguration().getConfiguration().get("starbounddata.packets.starbounddata.packets.starnubserver info")).get("server_name"));
        jsonObject.put("maxPlayers", (int) ((Map) StarNub.getConfiguration().getConfiguration().get("resources")).get("player_limit") +
                (int) ((Map) StarNub.getConfiguration().getConfiguration().get("resources")).get("player_limit_reserved") +
                2);
//plugin sql db connector
//Warp packets delay to starbound
// Remove exception throws as much as possble bad! - Resource usage

//Ban and disable db methods
                //TODO Management System - Player List, Banning, Kicking Plugin
// If modified then cmposite else direct

So here are my plans – this will be my last update of StarNub for a while 
    •	First I will fix the PVP not working
    •	Enjin account linking
    •	Fix a bug where permissions are not reloaded when you add a character to an account

After the above I am going to get to work to finishing StarNub and preparing it for 1.0, these are not in order.
    •	Networking
        -	I will be studying low level programming. My goal is to program the starnubdata.network from scratch over a library, which enables me to troubleshoot and have more control over the process and removing the library overhead. The Netty.IO library is great but not for Starbound. Unless I can configure it differently.
        -	Server Query to keep the starbounddata.packets.starbounddata.packets.starnubserver up needs to be kept on its own
        -	Server Query’s from external websites need to be handled better
        - Connection clean up disconnects, epoll

    •	StarNub Launcher Jar

    •	StarNub Update Available Notification

    •	Player Location Tracking
        -	StarNub to handle local starbounddata.packets.chat as well

    •	Wrapper internals
        -	Full shutdown
        -	Full restart (Needs Launcher/Updater Jar)
        -	Resource clean up and reset
        -	Resource Usage tracking
        -	Player history tracking (Load purposes)
        -	Thread Checking


    •	API to complete (Ability to manipulate data)(Needed for commands)
         -	Plugin resource extraction
            	This way help plugin can load help files
        -	Chat Rooms, leave, join, create
        -	Awards
            	Award loading from YAML/JSON
        -	Groups (Everything)
        -	Player settings
        -	Permissions
            	Timed
        -	Server Stats (Player Joins, quits, restarts, ect)
        -	Change Database classes to use LOMBOK Setters and separate the database update method.
        -	Restrictions (Perhaps change slightly, but for sure StarNub Accounts need disabling (Added already partway)
        -	AFK vs IDLE tracking (Needs Location Tracking)

    •	Events Created

Small Changes:
    •	Create a couple new classes for Database Data (Detailed Data Entity (Date, REJECTION_REASON, Date Expires, Imposer, Imposer ID))
    •	CMS Integration
        o	Hasher to match Danks
            	MessageDigest digest = MessageDigest.getInstance("SHA-256"); byte[] hash = digest.digest(text.getBytes("UTF-8"));
        o	For the $salt, just have it create a random string, it doesnt matter what or how or why, that's not important,  just needs to follow this 3 steps
            	1 -> $salt = uniqid(mt_rand(), true); //create a random string, whatever you want
            	2 -> $hash = hash('sha256', $password); //hash the password string the person wrote down into sha256
            	3 -> $passf = hash('sha256', $salt . $hash); mix together and hash again
    •	Add shadow, clear and other support (GameColors.class)

    •	Commands (Small changes)
        o	/starbounddata.packets.starbounddata.packets.starnubserver time
        o	/restart timer
        o	 /permissions
            	Create, delete, update, add, remove, info
        o	/groups
            	Create, delete, update, add, remove, promote, info
        o	/tags
            	Create, delete, update, add, remove, info
        o	/awards
            	Create, delete, update, add, remove, info
        o	/help
        o	/afk
        o	/player info
        o	/player limit
            	Reserved, Non Reserved and Total
        o	/cpu
        o	/ram

    •	Plugin Stuff
        o	NoCheats
            	Detect someone joining on a banned IP or uuid, (If new uuid or IP ban it as well)

After 1.0 before 2.0
    •	Projectile Anti Greif
        o	Ship Access Protection, Planet Protections
        o	Vote on for Pixels Plugin


2.0 Features
    •	Add restful API (For StarNub manipulation and CMS use)
    •	Remote Players (Phone Apps, IRC Log –Ins and Misc external applications)
        o	Remote Management is a Subset of this
    •	Reserved Slot System to be level system. Starnub.reserved.#
    •	File monitoring and access API
        o	Could be used for back up plugins, on utilities.file changes update X utilities.file in wrapper
        o	Codex for plugin info and commands

3.0 Features
    •	Standalone PHP and HSQL for Plugins to use as well as CMS complete standalone StarNub